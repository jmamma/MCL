[platformio]

[env:rp2350]
platform = https://github.com/maxgerhardt/platform-raspberrypi.git
board = generic_rp2350
board_build.core = earlephilhower
framework = arduino
build_src_filter = +<mcl/*> +<platform/rp2040/*> +<resources/rp2040/*>

lib_deps =
    adafruit/Adafruit GFX Library@1.12.1
    adafruit/Adafruit NeoPixel@1.12.4
    https://github.com/ctag-fh-kiel/Adafruit_TinyUSB_Arduino.git#fix/usb_host_arturia_bspro
    https://github.com/rppicomidi/usb_midi_host.git#1.1.4
    https://github.com/ctag-fh-kiel/DaDa_OLED.git#pr_jmamma_ssd1309
    git+ssh://git@github.com/ctag-fh-kiel/rp2350-arduino-tbd-fw#pr_ui_external_access

build_flags =
    -DUSE_TINYUSB
#    -DUSE_TINYUSB_HOST
    -D CFG_TUSB_CONFIG_FILE=\"custom_tusb_config.h\"
    -DARDUINO_TINYUSB_MIDI
    -DPLATFORM_TBD
    -I$PROJECT_INCLUDE_DIR
    -I src/platform/rp2040
    -I src/mcl/ResourceManager
    -I src/mcl/A4
    -I src/mcl/MCL
    -I src/mcl/MD
    -I src/mcl/MNM
    -I src/mcl/GUI
    -I src/mcl/Midi
    -I src/mcl/CommonTools
    -I src/mcl/Fonts
    -I src/mcl/Diagnostic
    -I src/mcl/Elektron
    -I src/mcl/MidiTools
    -I src/mcl/Tests
    -I src/resources/rp2040

monitor_speed = 115200

#lib_ldf_mode = deep
extra_scripts =
    post:./tools/generate_resources.py

debug_tool = cmsis-dap
debug_port = 192.168.1.111:3333
upload_protocol = cmsis-dap

[env:avr]
platform = atmelavr
framework = arduino
board = ATmega2560


# Force C++ standard to match Arduino IDE
#board_build.standard = gnu++1z
; Override the core
#board_build.core = mycore

#platform_packages =
#    framework-arduino-avr-mycore @ file://${PROJECT_DIR}/framework/framework-arduino-avr-mycore


build_src_filter =
    +<mcl/*>
#    +<mcl/main.cpp>
    +<platform/avr/*>
    +<resources/avr/*>
lib_deps =
#    src/MCL
#    src/resources/avr
    greiman/SdFat@2.2.3
    https://github.com/jmamma/Adafruit_SSD1305#megacommand_avr
    https://github.com/jmamma/Adafruit-GFX-Library#megacommand_avr
# Remove PlatformIO's automatic flags that cause duplicates
build_unflags =
    -std=gnu11
    -fpermissive
    -flto

# CPU frequency
board_build.f_cpu = 16000000L

# Library dependency finder mode
lib_archive = yes
extra_scripts =
    post:./tools/avr.py
    post:./tools/generate_resources.py

# Build flags to match Arduino IDE exactly
build_flags =
#    -DDEBUGMODE
    -std=gnu++1z
    -g
    -MMD
    -Wdouble-promotion
    -fshort-enums
    --short-enums
    -ffunction-sections
    -fdata-sections
    -flto=jobserver
    -fno-exceptions
    -fno-threadsafe-statics
    -fpermissive  # Add this instead
    -fno-rtti
    -Wl,--gc-sections
    -Wl,--defsym=__stack=0x801FA1
    -Wl,--section-start,.sdcard=0x801FA2
    -Wl,--section-start,.data=0x802200
    -Wl,--defsym=__heap_end=0x80ffff
    -Wl,--relax
    -DARDUINO_AVR_MEGA2560
    -DARDUINO_ARCH_AVR
    -DMEGACOMMAND
    -DSDFAT_FILE_TYPE=1
    -DUSE_FAT_FILE_FLAG_CONTIGUOUS=1
    -DENABLE_DEDICATED_SPI=1
    # Include paths for libraries (relative to project root)
    -I .pio/libdeps/avr/SdFat/src
#   -I .pio/libdeps/avr/Adafruit\ SSD1305
    -I src/platform/avr
    -I src/mcl/ResourceManager
    -I src/mcl/A4
    -I src/mcl/MCL
    -I src/mcl/MD
    -I src/mcl/MNM
    -I src/mcl/GUI
    -I src/mcl/Midi
    -I src/mcl/CommonTools
    -I src/mcl/Fonts
    -I src/mcl/Diagnostic
    -I src/mcl/Elektron
    -I src/mcl/MidiTools
    -I src/mcl/Tests
    -I src/resources/avr
    -Isrc

# Upload settings
upload_protocol = arduino
upload_speed = 115200

upload_flags = -V
